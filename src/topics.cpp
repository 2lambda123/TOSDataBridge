/* 
Copyright (C) 2014 Jonathon Ogden   < jeog.dev@gmail.com >

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see http://www.gnu.org/licenses.
*/

#include "tos_databridge.h"

namespace{

typedef TOS_Topics::topic_map_entry_type pair_ty;

/* VS2012 doesnt provide initlist support for maps so we do it the hard way */
TOS_Topics::topic_map_type BuildTopicsMapping();

};

template<> const TOS_Topics::topic_map_type TOS_Topics::map = BuildTopicsMapping();

namespace {

TOS_Topics::topic_map_type BuildTopicsMapping()
{
    TOS_Topics::topic_map_type m;

    m.insert( pair_ty(TOS_Topics::TOPICS::NULL_TOPIC, " ") );
    m.insert( pair_ty(TOS_Topics::TOPICS::HIGH52, "52HIGH") );
    m.insert( pair_ty(TOS_Topics::TOPICS::LOW52, "52LOW") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::ADX, "ADX") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::ADXCrossover, "ADXCrossover") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::ADXR, "ADXR") );
    m.insert( pair_ty(TOS_Topics::TOPICS::ASK, "ASK") );
    m.insert( pair_ty(TOS_Topics::TOPICS::ASKX, "ASKX") );
    m.insert( pair_ty(TOS_Topics::TOPICS::ASK_SIZE, "ASK_SIZE") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::ATRWilder, "ATRWilder") );
    m.insert( pair_ty(TOS_Topics::TOPICS::AX, "AX") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::AbandonedBaby, "AbandonedBaby") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::AccelerationBands, "AccelerationBands") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::AccelerationDecelerationOsc, "AccelerationDecelerationOsc") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::AdvanceBlock, "AdvanceBlock") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::Alpha2, "Alpha2") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::AlphaJensen, "AlphaJensen") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::AroonIndicator, "AroonIndicator") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::AroonOscillator, "AroonOscillator") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::AverageTrueRange, "AverageTrueRange") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::AwesomeOscillator, "AwesomeOscillator") );
    m.insert( pair_ty(TOS_Topics::TOPICS::BACK_EX_MOVE, "BACK_EX_MOVE") );
    m.insert( pair_ty(TOS_Topics::TOPICS::BACK_VOL, "BACK_VOL") );
    m.insert( pair_ty(TOS_Topics::TOPICS::BA_SIZE, "BA_SIZE") );
    m.insert( pair_ty(TOS_Topics::TOPICS::BETA, "BETA") );
    m.insert( pair_ty(TOS_Topics::TOPICS::BID, "BID") );
    m.insert( pair_ty(TOS_Topics::TOPICS::BIDX, "BIDX") );
    m.insert( pair_ty(TOS_Topics::TOPICS::BID_SIZE, "BID_SIZE") );
    m.insert( pair_ty(TOS_Topics::TOPICS::BX, "BX") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::BalanceOfMarketPower, "BalanceOfMarketPower") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::BeltHold, "BeltHold") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::Beta, "Beta") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::Beta2, "Beta2") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::BollingerBandsCrossover, "BollingerBandsCrossover") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::BollingerBandsEMA, "BollingerBandsEMA") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::BollingerBandsSMA, "BollingerBandsSMA") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::BollingerBandwidth, "BollingerBandwidth") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::BollingerPercentB, "BollingerPercentB") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::Breakaway, "Breakaway") );
    m.insert( pair_ty(TOS_Topics::TOPICS::CALL_VOLUME_INDEX, "CALL_VOLUME_INDEX") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::CCI, "CCI") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::CCIAverage, "CCIAverage") );
    m.insert( pair_ty(TOS_Topics::TOPICS::CLOSE, "CLOSE") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::COVERED_RETURN, "COVERED_RETURN") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::CSI, "CSI") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::CUSTOM1, "CUSTOM1") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::CUSTOM10, "CUSTOM10") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::CUSTOM11, "CUSTOM11") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::CUSTOM12, "CUSTOM12") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::CUSTOM13, "CUSTOM13") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::CUSTOM14, "CUSTOM14") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::CUSTOM15, "CUSTOM15") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::CUSTOM16, "CUSTOM16") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::CUSTOM17, "CUSTOM17") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::CUSTOM18, "CUSTOM18") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::CUSTOM19, "CUSTOM19") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::CUSTOM2, "CUSTOM2") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::CUSTOM3, "CUSTOM3") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::CUSTOM4, "CUSTOM4") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::CUSTOM5, "CUSTOM5") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::CUSTOM6, "CUSTOM6") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::CUSTOM7, "CUSTOM7") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::CUSTOM8, "CUSTOM8") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::CUSTOM9, "CUSTOM9") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::ChaikinMoneyFlow, "ChaikinMoneyFlow") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::ChaikinVolatility, "ChaikinVolatility") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::ChandeMomentumOscillator, "ChandeMomentumOscillator") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::CloseLocationValue, "CloseLocationValue") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::ConcealingBabySwallow, "ConcealingBabySwallow") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::Correlation, "Correlation") );
    m.insert( pair_ty(TOS_Topics::TOPICS::DELTA, "DELTA") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::DEMA, "DEMA") );
    m.insert( pair_ty(TOS_Topics::TOPICS::DESCRIPTION, "DESCRIPTION") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::DIMinus, "DIMinus") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::DIPlus, "DIPlus") );
    m.insert( pair_ty(TOS_Topics::TOPICS::DIV, "DIV") );
    m.insert( pair_ty(TOS_Topics::TOPICS::DIV_FREQ, "DIV_FREQ") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::DMA, "DMA") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::DMI, "DMI") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::DMI_Oscillator, "DMI_Oscillator") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::DMI_ReversalAlerts, "DMI_ReversalAlerts") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::DMI_StochasticExtreme, "DMI_StochasticExtreme") );
    m.insert( pair_ty(TOS_Topics::TOPICS::DT, "DT") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::DailyHighLow, "DailyHighLow") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::DailyOpen, "DailyOpen") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::DailySMA, "DailySMA") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::DarkCloudCover, "DarkCloudCover") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::Deliberation, "Deliberation") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::DetrendedPriceOsc, "DetrendedPriceOsc") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::DisparityIndex, "DisparityIndex") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::DisplacedEMA, "DisplacedEMA") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::Displacer, "Displacer") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::Doji, "Doji") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::DoubleSmoothedStochastics, "DoubleSmoothedStochastics") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::DownsideGapThreeMethods, "DownsideGapThreeMethods") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::DownsideTasukiGap, "DownsideTasukiGap") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::EMAEnvelope, "EMAEnvelope") );
    m.insert( pair_ty(TOS_Topics::TOPICS::EPS, "EPS") );
    m.insert( pair_ty(TOS_Topics::TOPICS::EXCHANGE, "EXCHANGE") );
    m.insert( pair_ty(TOS_Topics::TOPICS::EXPIRATION, "EXPIRATION") );
    m.insert( pair_ty(TOS_Topics::TOPICS::EXTRINSIC, "EXTRINSIC") );
    m.insert( pair_ty(TOS_Topics::TOPICS::EX_DIV_DATE, "EX_DIV_DATE") );
    m.insert( pair_ty(TOS_Topics::TOPICS::EX_MOVE_DIFF, "EX_MOVE_DIFF") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::EaseOfMovement, "EaseOfMovement") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::EhlersDistantCoefficientFilter, "EhlersDistantCoefficientFilter") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::ElderImpulse, "ElderImpulse") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::ElderRay, "ElderRay") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::ElderRayBearPower, "ElderRayBearPower") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::ElderRayBullPower, "ElderRayBullPower") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::ElliotOscillator, "ElliotOscillator") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::Engulfing, "Engulfing") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::ErgodicOsc, "ErgodicOsc") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::EveningDojiStar, "EveningDojiStar") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::EveningStar, "EveningStar") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::FAKE_THINKSCRIPT_COLUMN, "FAKE_THINKSCRIPT_COLUMN") );
    m.insert( pair_ty(TOS_Topics::TOPICS::FRONT_EX_MOVE, "FRONT_EX_MOVE") );
    m.insert( pair_ty(TOS_Topics::TOPICS::FRONT_VOL, "FRONT_VOL") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::FW_CCI_Advanced, "FW_CCI_Advanced") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::FW_CCI_Basic, "FW_CCI_Basic") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::FW_MMG, "FW_MMG") );
    m.insert( pair_ty(TOS_Topics::TOPICS::FX_PAIR, "FX_PAIR") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::FallingThreeMethods, "FallingThreeMethods") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::FastBeta, "FastBeta") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::ForceIndex, "ForceIndex") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::ForecastOscillator, "ForecastOscillator") );
    m.insert( pair_ty(TOS_Topics::TOPICS::GAMMA, "GAMMA") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::GatorOscillator, "GatorOscillator") );
    m.insert( pair_ty(TOS_Topics::TOPICS::HIGH, "HIGH") );
    m.insert( pair_ty(TOS_Topics::TOPICS::HTB_ETB, "HTB_ETB") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::Hammer, "Hammer") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::HangingMan, "HangingMan") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::Harami, "Harami") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::HaramiCross, "HaramiCross") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::HighPriceGappingPlay, "HighPriceGappingPlay") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::HistoricalVolatility, "HistoricalVolatility") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::HomingPigeon, "HomingPigeon") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::HullMovingAvg, "HullMovingAvg") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::IFT_StochOsc, "IFT_StochOsc") );
    m.insert( pair_ty(TOS_Topics::TOPICS::IMPL_VOL, "IMPL_VOL") );
    m.insert( pair_ty(TOS_Topics::TOPICS::INTRINSIC, "INTRINSIC") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::Ichimoku, "Ichimoku") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::IdenticalThreeCrows, "IdenticalThreeCrows") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::ImpVolatility, "ImpVolatility") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::InNeck, "InNeck") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::Inertia, "Inertia") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::IntradayMomentumIndex, "IntradayMomentumIndex") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::InvertedHammer, "InvertedHammer") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::KeltnerChannels, "KeltnerChannels") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::Kicking, "Kicking") );
    m.insert( pair_ty(TOS_Topics::TOPICS::LAST, "LAST") );
    m.insert( pair_ty(TOS_Topics::TOPICS::LASTX, "LASTX") );
    m.insert( pair_ty(TOS_Topics::TOPICS::LAST_SIZE, "LAST_SIZE") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::LBR_PaintBars, "LBR_PaintBars") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::LBR_SmartADX, "LBR_SmartADX") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::LBR_ThreeTenOscillator, "LBR_ThreeTenOscillator") );
    m.insert( pair_ty(TOS_Topics::TOPICS::LOW, "LOW") );
    m.insert( pair_ty(TOS_Topics::TOPICS::LX, "LX") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::LinearRegCurve, "LinearRegCurve") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::LinearRegrReversal, "LinearRegrReversal") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::LinearRegressionSlope, "LinearRegressionSlope") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::LongLeggedDoji, "LongLeggedDoji") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::LookUpHighest, "LookUpHighest") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::LookUpLowest, "LookUpLowest") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::LowPriceGappingPlay, "LowPriceGappingPlay") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::MACD, "MACD") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::MACDHistogram, "MACDHistogram") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::MACDHistogramCrossover, "MACDHistogramCrossover") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::MACDTwoLines, "MACDTwoLines") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::MACDWithPrices, "MACDWithPrices") );
    m.insert( pair_ty(TOS_Topics::TOPICS::MARK, "MARK") );
    m.insert( pair_ty(TOS_Topics::TOPICS::MARKET_CAP, "MARKET_CAP") );
    m.insert( pair_ty(TOS_Topics::TOPICS::MARK_CHANGE, "MARK_CHANGE") );
    m.insert( pair_ty(TOS_Topics::TOPICS::MARK_PERCENT_CHANGE, "MARK_PERCENT_CHANGE") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::MAX_COVERED_RETURN, "MAX_COVERED_RETURN") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::MESASineWave, "MESASineWave") );
    m.insert( pair_ty(TOS_Topics::TOPICS::MRKT_MKR_MOVE, "MRKT_MKR_MOVE") );
    m.insert( pair_ty(TOS_Topics::TOPICS::MT_NEWS, "MT_NEWS") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::MarkerIndicator, "MarkerIndicator") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::MarketForecast, "MarketForecast") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::Marubozu, "Marubozu") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::MassIndex, "MassIndex") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::MatHold, "MatHold") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::MatchingLow, "MatchingLow") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::MedianAverage, "MedianAverage") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::MedianPrice, "MedianPrice") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::MeetingLines, "MeetingLines") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::MktFacilitationIdx, "MktFacilitationIdx") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::Momentum, "Momentum") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::MomentumCrossover, "MomentumCrossover") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::MomentumPercent, "MomentumPercent") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::MomentumSMA, "MomentumSMA") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::MoneyFlowIndex, "MoneyFlowIndex") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::MoneyFlowIndexCrossover, "MoneyFlowIndexCrossover") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::MorningDojiStar, "MorningDojiStar") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::MorningStar, "MorningStar") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::MovAvgExpRibbon, "MovAvgExpRibbon") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::MovAvgExponential, "MovAvgExponential") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::MovAvgTriangular, "MovAvgTriangular") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::MovAvgTwoLines, "MovAvgTwoLines") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::MovAvgWeighted, "MovAvgWeighted") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::MovingAvgCrossover, "MovingAvgCrossover") );
    m.insert( pair_ty(TOS_Topics::TOPICS::NET_CHANGE, "NET_CHANGE") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::Next3rdFriday, "Next3rdFriday") );
    m.insert( pair_ty(TOS_Topics::TOPICS::OPEN, "OPEN") );
    m.insert( pair_ty(TOS_Topics::TOPICS::OPEN_INT, "OPEN_INT") );
    m.insert( pair_ty(TOS_Topics::TOPICS::OPTION_VOLUME_INDEX, "OPTION_VOLUME_INDEX") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::OnNeck, "OnNeck") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::OpenInterest, "OpenInterest") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::OptionDelta, "OptionDelta") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::OptionGamma, "OptionGamma") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::OptionRho, "OptionRho") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::OptionTheta, "OptionTheta") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::OptionVega, "OptionVega") );
    m.insert( pair_ty(TOS_Topics::TOPICS::PE, "PE") );
    m.insert( pair_ty(TOS_Topics::TOPICS::PERCENT_CHANGE, "PERCENT_CHANGE") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::PROB_OF_EXPIRING, "PROB_OF_EXPIRING") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::PROB_OF_TOUCHING, "PROB_OF_TOUCHING") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::PROB_OTM, "PROB_OTM") );
    m.insert( pair_ty(TOS_Topics::TOPICS::PUT_CALL_RATIO, "PUT_CALL_RATIO") );
    m.insert( pair_ty(TOS_Topics::TOPICS::PUT_VOLUME_INDEX, "PUT_VOLUME_INDEX") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::PairCorrelation, "PairCorrelation") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::PairRatio, "PairRatio") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::PercentChg, "PercentChg") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::PercentR, "PercentR") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::PersonsPivots, "PersonsPivots") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::PiercingLine, "PiercingLine") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::PolarizedFractalEfficiency, "PolarizedFractalEfficiency") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::PolychromMtm, "PolychromMtm") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::PriceActionIndicator, "PriceActionIndicator") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::PriceAverageCrossover, "PriceAverageCrossover") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::PriceChannel, "PriceChannel") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::PriceOsc, "PriceOsc") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::PriceVolumeRank, "PriceVolumeRank") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::PriceZoneOscillator, "PriceZoneOscillator") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::ProjectionBands, "ProjectionBands") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::ProjectionOscillator, "ProjectionOscillator") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::QStick, "QStick") );
    m.insert( pair_ty(TOS_Topics::TOPICS::RHO, "RHO") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::ROC, "ROC") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::ROR, "ROR") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::RSIWilder, "RSIWilder") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::RSIWilderCrossover, "RSIWilderCrossover") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::RSI_EMA, "RSI_EMA") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::RSquared, "RSquared") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::RandomWalkIndex, "RandomWalkIndex") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::RangeBands, "RangeBands") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::RangeIndicator, "RangeIndicator") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::RateOfChange, "RateOfChange") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::RateOfChangeCrossover, "RateOfChangeCrossover") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::RelativeMomentumIndex, "RelativeMomentumIndex") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::RelativeRangeIndex, "RelativeRangeIndex") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::RelativeVolatilityIndex, "RelativeVolatilityIndex") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::ReverseEngineeringMACD, "ReverseEngineeringMACD") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::RibbonStudy, "RibbonStudy") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::RisingThreeMethods, "RisingThreeMethods") );
    m.insert( pair_ty(TOS_Topics::TOPICS::SHARES, "SHARES") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::SMAEnvelope, "SMAEnvelope") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::STARCBands, "STARCBands") );
    m.insert( pair_ty(TOS_Topics::TOPICS::STRENGTH_METER, "STRENGTH_METER") );
    m.insert( pair_ty(TOS_Topics::TOPICS::STRIKE, "STRIKE") );
    m.insert( pair_ty(TOS_Topics::TOPICS::SYMBOL, "SYMBOL") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::SectorRotationModel, "SectorRotationModel") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::SentimentZoneOscillator, "SentimentZoneOscillator") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::SeparatingLines, "SeparatingLines") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::ShootingStar, "ShootingStar") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::SideBySideWhiteLines, "SideBySideWhiteLines") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::SimpleMovingAvg, "SimpleMovingAvg") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::Spearman, "Spearman") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::SpectrumBars, "SpectrumBars") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::Spreads, "Spreads") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::StandardDeviation, "StandardDeviation") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::StandardError, "StandardError") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::StandardErrorBands, "StandardErrorBands") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::StickSandwich, "StickSandwich") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::StochRSI, "StochRSI") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::StochasticCrossover, "StochasticCrossover") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::StochasticFast, "StochasticFast") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::StochasticFull, "StochasticFull") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::StochasticMomentumIndex, "StochasticMomentumIndex") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::StochasticSlow, "StochasticSlow") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::SwamiIntradayImpulse, "SwamiIntradayImpulse") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::SwamiRelativePerformance, "SwamiRelativePerformance") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::SwingIndex, "SwingIndex") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::SymbolRelation, "SymbolRelation") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::TAC_DIMinus, "TAC_DIMinus") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::TAC_DIPlus, "TAC_DIPlus") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::TEMA, "TEMA") );
    m.insert( pair_ty(TOS_Topics::TOPICS::THETA, "THETA") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::TMV, "TMV") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::TRIX, "TRIX") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::TTM_Squeeze, "TTM_Squeeze") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::TTM_Wave, "TTM_Wave") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::TheoreticalOptionPrice, "TheoreticalOptionPrice") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::ThreeBlackCrows, "ThreeBlackCrows") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::ThreeInsideDown, "ThreeInsideDown") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::ThreeInsideUp, "ThreeInsideUp") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::ThreeLineStrike, "ThreeLineStrike") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::ThreeOutsideDown, "ThreeOutsideDown") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::ThreeOutsideUp, "ThreeOutsideUp") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::ThreeStarsInTheSouth, "ThreeStarsInTheSouth") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::ThreeWhiteSoldiers, "ThreeWhiteSoldiers") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::Thrusting, "Thrusting") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::TimeSeriesForecast, "TimeSeriesForecast") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::TrendPeriods, "TrendPeriods") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::TriStar, "TriStar") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::TrueRangeIndicator, "TrueRangeIndicator") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::TrueRangeSpecifiedVolume, "TrueRangeSpecifiedVolume") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::TrueStrengthIndex, "TrueStrengthIndex") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::TwoCrows, "TwoCrows") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::TypicalPrice, "TypicalPrice") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::UlcerIndex, "UlcerIndex") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::UltimateOscillator, "UltimateOscillator") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::UniqueThreeRiverBottom, "UniqueThreeRiverBottom") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::UpsideGapThreeMethods, "UpsideGapThreeMethods") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::UpsideGapTwoCrows, "UpsideGapTwoCrows") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::UpsideTasukiGap, "UpsideTasukiGap") );
    m.insert( pair_ty(TOS_Topics::TOPICS::VEGA, "VEGA") );
    m.insert( pair_ty(TOS_Topics::TOPICS::VOLUME, "VOLUME") );
    m.insert( pair_ty(TOS_Topics::TOPICS::VOL_DIFF, "VOL_DIFF") );
    m.insert( pair_ty(TOS_Topics::TOPICS::VOL_INDEX, "VOL_INDEX") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::VerticalHorizontalFilter, "VerticalHorizontalFilter") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::VolatilityStdDev, "VolatilityStdDev") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::VolatilitySwitch, "VolatilitySwitch") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::VolumeAccumulation, "VolumeAccumulation") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::VolumeAvg, "VolumeAvg") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::VolumeFlowIndicator, "VolumeFlowIndicator") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::VolumeOsc, "VolumeOsc") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::VolumeRateOfChange, "VolumeRateOfChange") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::VolumeWeightedMACD, "VolumeWeightedMACD") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::VolumeZoneOscillator, "VolumeZoneOscillator") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::VortexIndicator, "VortexIndicator") );
    m.insert( pair_ty(TOS_Topics::TOPICS::WEIGHTED_BACK_VOL, "WEIGHTED_BACK_VOL") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::WeaknessInAStrongTrend, "WeaknessInAStrongTrend") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::WeightedClose, "WeightedClose") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::WildersSmoothing, "WildersSmoothing") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::WilliamsAlligator, "WilliamsAlligator") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::WilliamsPercentR, "WilliamsPercentR") );
  //m.insert( pair_ty(TOS_Topics::TOPICS::WoodiesPivots, "WoodiesPivots") );
    m.insert( pair_ty(TOS_Topics::TOPICS::YIELD, "YIELD") );

  return m;
}

};


